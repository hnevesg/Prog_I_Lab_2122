import java.util.Scanner;
import java.util.Random;

public class methods {
	public static void main (String [] args) { 
 		menu();
	}	

	static Scanner sc = new Scanner (System.in);

	public static double method1 () {	
		int UB, LB;
		double number;
		System.out.println("Introduce the values of the range. The second one must be equal or greater than the first one.");
		LB = sc.nextInt(); // low
		UB = sc.nextInt(); //upper
		
		while (LB>UB) {
			System.out.println("Error. Rewrite the small value.");
			LB = sc.nextInt();
		}
		System.out.println("Now that you have created the range, introduce a number which is inside it.");
		number = sc.nextDouble();
		if(number>=LB && number<=UB) {
			System.out.print("You have entered a number inside the range: " + number);
			return number;
		}else {
			while (number<LB || number>UB) {
				System.out.println("Error. Write the number again.");
				number = sc.nextDouble();
			}
			System.out.println("You have entered a number inside the range: " + number);				
			return number;
		}
	}
	
	public static int method2() {
		int positive;
		System.out.println("Introduce a positive number:");
		positive = sc.nextInt(); 
		while (positive<=0) {
			System.out.println("Error. Introduce the value again.");
			positive=sc.nextInt();
	  	}
		System.out.println("You have introduced a correct value. The method ends.");
		return positive;
	}
	
	
	public static boolean[] method3 () {
		boolean[] array = new boolean[9];
		boolean j=false;
		System.out.print("The array created is: ");
		for(int i=0; i<=array.length-1; i++) {
			if (i==3) {
				j=true;
			}else {
				j=false;
			}
			array [i] = j;
			System.out.print(array[i] + " ");
		}
		System.out.println();
		return array;
	}
	
	public static boolean[][] method4 (int N, int M, boolean B) {
		B=true;
		int i=0, j=0;
		
		System.out.print("Introduce how many rows the array is going to have: ");
		N=sc.nextInt();
		while (N<=0) {
			System.out.print("The number of rows must be a integer bigger than 0. Rewrite the value: ");
			N=sc.nextInt();
		}
		 
		System.out.print("Introduce how many columns the array is going to have: ");
		M=sc.nextInt();
		while (M<=0) {
			System.out.print("The number of columns must be a integer bigger than 0. Rewrite the value: ");
			M=sc.nextInt();
		}
		 
		if (N>2 && M>4 || M==3) {
			B=false;
		}
		boolean[][] matrix = new boolean[N][M];
		
		for(i=0; i<=N-1; i++) {
			System.out.println(" ");
			for(j=0; j<matrix[i].length; j++){
				System.out.print(matrix[i][j]=B);		
				System.out.print(" ");
			}
		}
		
		return matrix;
	}
			
	
	public static boolean[][] method5(boolean value) {
		Random rd = new Random();
		int j=0, i=0, R=rd.nextInt(9), C=rd.nextInt(9);
	   	boolean[][] array = new boolean [R+2][C+2];
	   
	   	System.out.print("The array created is: ");
		for (i=0; i<array.length; i++){
			System.out.println(" ");
			for(j=0;j<array[i].length; j++) {
				value=rd.nextBoolean();
		     	System.out.print(array[i][j]=value);
			     System.out.print(" ");		
	  		}
	 	}
		return array;
	}
	
	
	public static int method6(boolean C, boolean[] array) {
		Random rd = new Random();
		int counter=0, A=rd.nextInt(20);
		C=false;
		array = new boolean [A];
		
		System.out.print("The array created is: ");
		for (int i=0; i<array.length-1;i++) {
			C=rd.nextBoolean();
			System.out.print(array[i]=C);
			System.out.print(" ");
			if (array[i]==true) {
				counter++;
			}
		}
		if(counter==1) {
			System.out.println();
			System.out.println("There is " + counter + " true in the array.");
		}else {
			System.out.println();
			System.out.println("There are " + counter + " trues in the array.");
		}
		return counter;
	}

	
	public static void menu() {
		Random rd = new Random();
		int methods;
		int N=rd.nextInt(), M=rd.nextInt(); 
		boolean B=rd.nextBoolean();
		boolean value=rd.nextBoolean();
		boolean C=rd.nextBoolean();
		boolean[] array= new boolean [rd.nextInt(20)];
		
		System.out.println("Write down the number of the method you want to execute. If you want to execute all, write a number bigger than 6." );
		methods=sc.nextInt();
		
		switch (methods) {
			case 1: 
				System.out.println("Lets execute the first method:");
				method1();
				break;
			case 2: 
				System.out.println("Lets execute the second method:");
				method2();
				break;
			case 3: 
				System.out.println("Lets execute the third method:");
				method3();
				break;
			case 4: 
				System.out.println("Lets execute the fourth method:");
				method4(M,N,B);
				break;
			case 5: 
				System.out.println("Lets execute the fifth method:");
				method5	(value);
				break;
			case 6: 
				System.out.println("Lets execute the sixth method:");
				method6(C,array);
				break;
	 		default:
				System.out.println("Lets execute all six methods:");
			    method1();		    
				System.out.println(" ");
				System.out.println("Lets execute the second method:");
			    method2();			    
				System.out.println(" ");
				System.out.println("Lets execute the third method:");
			    method3();				    
				System.out.println(" ");
				System.out.println("Lets execute the fourth method:");
				method4(M,N,B);				
				System.out.println(" ");
				System.out.println("Lets execute the fifth method:");
				method5	(value);
				System.out.println(" ");
				System.out.println("Lets execute the sixth method:");
				method6(C,array);
	 	}
		sc.close();
	}
}